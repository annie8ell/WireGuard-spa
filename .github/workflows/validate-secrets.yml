name: Validate Repository Secrets

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - '.github/workflows/validate-secrets.yml'

jobs:
  validate-secrets:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Validate Required Secrets
        id: check-secrets
        env:
          # Set environment variables from secrets
          # If secret doesn't exist, env var will be empty
          AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
          AZURE_FUNCTIONAPP_PUBLISH_PROFILE: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }}
          AZURE_STATIC_WEB_APPS_API_TOKEN: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          AZURE_FUNCTIONAPP_NAME: ${{ secrets.AZURE_FUNCTIONAPP_NAME }}
        run: |
          set +e  # Don't exit on errors, we want to check all secrets
          
          echo "Checking required repository secrets..."
          echo ""
          
          # Initialize counters
          PASSED=0
          FAILED=0
          
          # Array to track results
          declare -a RESULTS
          
          # Function to check if secret is set
          check_secret() {
            local secret_name=$1
            local secret_value=$2
            
            if [[ -n "$secret_value" ]]; then
              echo "✅ $secret_name is set"
              RESULTS+=("PASS|$secret_name|Set")
              ((PASSED++))
              return 0
            else
              echo "❌ $secret_name is NOT set"
              RESULTS+=("FAIL|$secret_name|Not set")
              ((FAILED++))
              return 1
            fi
          }
          
          # Check each required secret
          echo "=== Checking Secrets ==="
          echo ""
          
          check_secret "AZURE_CREDENTIALS" "$AZURE_CREDENTIALS"
          check_secret "AZURE_FUNCTIONAPP_PUBLISH_PROFILE" "$AZURE_FUNCTIONAPP_PUBLISH_PROFILE"
          check_secret "AZURE_STATIC_WEB_APPS_API_TOKEN" "$AZURE_STATIC_WEB_APPS_API_TOKEN"
          check_secret "AZURE_FUNCTIONAPP_NAME" "$AZURE_FUNCTIONAPP_NAME"
          
          echo ""
          echo "=== Summary ==="
          echo "Passed: $PASSED"
          echo "Failed: $FAILED"
          echo ""
          
          # Save results for summary
          echo "passed=$PASSED" >> $GITHUB_OUTPUT
          echo "failed=$FAILED" >> $GITHUB_OUTPUT
          
          # Save results array as multiline output
          {
            echo 'results<<EOF'
            printf '%s\n' "${RESULTS[@]}"
            echo EOF
          } >> $GITHUB_OUTPUT
          
          # Exit with error if any secrets are missing
          if [[ $FAILED -gt 0 ]]; then
            echo "❌ Validation FAILED: $FAILED secret(s) are missing"
            exit 1
          else
            echo "✅ Validation PASSED: All required secrets are set"
            exit 0
          fi

      - name: Generate Summary Report
        if: always()
        run: |
          echo "# Repository Secrets Validation Report" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          PASSED="${{ steps.check-secrets.outputs.passed }}"
          FAILED="${{ steps.check-secrets.outputs.failed }}"
          
          if [[ "$FAILED" -gt 0 ]]; then
            echo "## ❌ Validation Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "$FAILED secret(s) are missing and need to be configured." >> $GITHUB_STEP_SUMMARY
          else
            echo "## ✅ Validation Passed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "All required secrets are properly configured." >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Secret Name | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          
          # Parse results from previous step
          while IFS='|' read -r status name description; do
            if [[ "$status" == "PASS" ]]; then
              echo "| $name | ✅ $description |" >> $GITHUB_STEP_SUMMARY
            elif [[ "$status" == "FAIL" ]]; then
              echo "| $name | ❌ $description |" >> $GITHUB_STEP_SUMMARY
            fi
          done <<< "${{ steps.check-secrets.outputs.results }}"
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Required Secrets" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The following secrets must be configured in your repository:" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "1. **AZURE_CREDENTIALS** - Service principal JSON for Azure authentication" >> $GITHUB_STEP_SUMMARY
          echo "2. **AZURE_FUNCTIONAPP_PUBLISH_PROFILE** - Function App deployment credentials (XML)" >> $GITHUB_STEP_SUMMARY
          echo "3. **AZURE_STATIC_WEB_APPS_API_TOKEN** - Static Web App deployment token" >> $GITHUB_STEP_SUMMARY
          echo "4. **AZURE_FUNCTIONAPP_NAME** - Name of your Azure Function App" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "$FAILED" -gt 0 ]]; then
            echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "To configure missing secrets:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. Review the [SETUP-SECRETS-AND-ROLES.md](../SETUP-SECRETS-AND-ROLES.md) documentation" >> $GITHUB_STEP_SUMMARY
            echo "2. Follow the step-by-step instructions to retrieve each secret" >> $GITHUB_STEP_SUMMARY
            echo "3. Add secrets via: **Settings** → **Secrets and variables** → **Actions**" >> $GITHUB_STEP_SUMMARY
            echo "4. Re-run this workflow to validate the configuration" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "For detailed instructions, see:" >> $GITHUB_STEP_SUMMARY
            echo "- [SETUP-SECRETS-AND-ROLES.md](../SETUP-SECRETS-AND-ROLES.md)" >> $GITHUB_STEP_SUMMARY
            echo "- [README.md](../README.md)" >> $GITHUB_STEP_SUMMARY
          else
            echo "## Next Steps" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "✅ All secrets are configured. You can now:" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "1. Run the infrastructure provisioning workflow" >> $GITHUB_STEP_SUMMARY
            echo "2. Deploy the backend (Functions)" >> $GITHUB_STEP_SUMMARY
            echo "3. Deploy the frontend (Static Web App)" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "For more information, see:" >> $GITHUB_STEP_SUMMARY
            echo "- [README.md](../README.md)" >> $GITHUB_STEP_SUMMARY
            echo "- [SETUP-SECRETS-AND-ROLES.md](../SETUP-SECRETS-AND-ROLES.md)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Fail Job if Secrets Missing
        if: steps.check-secrets.outputs.failed > 0
        run: |
          echo "❌ Validation failed: ${{ steps.check-secrets.outputs.failed }} secret(s) are missing"
          echo "Please configure the missing secrets and re-run this workflow."
          echo ""
          echo "For detailed setup instructions, see: SETUP-SECRETS-AND-ROLES.md"
          exit 1
